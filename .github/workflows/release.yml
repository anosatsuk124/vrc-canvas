name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Release binary
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: vrc-canvas_amd64.deb.gz
            asset_name: VRCCanvas_x86_64-unknown-linux-gnu.deb.gz
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            artifact_name: vrc-canvas.exe.zip
            asset_name: VRCCanvas_x86_64-pc-windows-gnu.zip
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: VRCCanvas.app.zip
            asset_name: VRCCanvas_aarch64-apple-darwin.zip
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: VRCCanvas.app.zip
            asset_name: VRCCanvas_x86_64-apple-darwin.app

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Install cargo-bundle to bundle binaries.
        uses: actions-rs/cargo@v1
        with:
          use-cross: true 
          command: install
          args: cargo-bundle --verbose

      - name: Cross build with all features
        uses: actions-rs/cargo@v1
        if: matrix.target == 'x86_64-pc-windows-gnu'
        with:
          use-cross: true 
          command: build
          args: --release --target ${{ matrix.target }} --all-features

      - name: Cross build with all features
        uses: actions-rs/cargo@v1
        if: matrix.target != 'x86_64-pc-windows-gnu'
        with:
          command: bundle
          args: --release --target ${{ matrix.target }} --all-features


      - name: Compress binaries
        run: |
          if [ "${{ matrix.target }}" = "x86_64-unknown-linux-gnu" ]; then
            bash -c "gzip target/release/bundle/deb/*.deb > target/release/${{ matrix.artifact_name }}"
          fi
          if [ "${{ matrix.target }}" = "x86_64-pc-windows-gnu" ]; then
            bash -c "zip target/release/${{ matrix.artifact_name }} target/${{ matrix.target }}/release/*.exe"
          fi
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            bash -c "zip target/release/${{ matrix.artifact_name }} target/release/bundle/osx/*.app"
          fi

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@2.1.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
